{"version":3,"file":"static/js/594.c5d4f29a.chunk.js","mappings":"sOAEMA,EAAW,+BACXC,EAAU,mCAEVC,EAAS,UAAMF,EAAN,wBAEFG,EAAiB,mCAAG,+GAEJC,EAAAA,EAAAA,IAAA,UACjBF,EADiB,oBACID,EADJ,YAFI,uBAEnBI,EAFmB,EAEnBA,KAFmB,kBAKpBA,EAAKC,SALe,gCAO3BC,QAAQC,MAAM,KAAMC,SAPO,yDAAH,qDAwBjBC,EAAe,mCAAG,WAAOC,GAAP,kGAEJP,EAAAA,EAAAA,IAAA,UACfJ,EADe,iCACkBC,EADlB,iCACkDU,EADlD,gCAFI,uBAElBN,EAFkB,EAElBA,KAFkB,kBAIlBA,EAAKC,SAJa,gCAMzBC,QAAQC,MAAM,KAAMC,SANK,yDAAH,qD,gHCoD5B,UA7EkB,WACf,OAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAGQC,GAAcC,EAAAA,EAAAA,MAAdD,UACFE,GAAWC,EAAAA,EAAAA,MACjBX,QAAQY,IAAIF,GAEZ,IAAMG,EAAcP,GAASA,EAAMQ,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOR,CAAhB,IACtCS,EAAI,UAAMJ,EAAYK,cAiC5B,OA9BAC,EAAAA,EAAAA,YAAU,WAAM,wCACb,0FAMaZ,EANb,UAM4BX,EAAAA,EAAAA,IAAkBY,GAN9C,wGADa,uBAAC,WAAD,wBAWbY,EACF,GAAE,CAACZ,IAEJR,QAAQY,IAAIC,IAiBT,6BACG,SAAC,KAAD,CAASQ,GAAG,QAAZ,sBACA,4BACG,gBAAKC,IAAG,0CAAqCT,EAAYU,aAAeC,IAAI,IAAIC,MAAM,SACtF,2BACG,yBACG,0BACIZ,EAAYa,MADhB,KACuB,gCAAQT,EAAKU,MAAM,EAAG,GAAtB,aAG1B,wCACA,2BACG,sCACA,uBAAId,EAAYe,eAEnB,yBACG,4CAKT,4BACG,mDACA,2BACG,mCACQ,uBAAIf,EAAYe,eAExB,4CAKd,C","sources":["components/Api/api.js","pages/MovieCard.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '37314a167a558e9a6582597c5654a5d7';\n\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\n\nexport const getTrendingMovies = async () => {\n   try {\n      const { data } = await axios.get(\n         `${TREND_URL}?api_key=${API_KEY}&page=1`\n      );\n      return data.results;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\nexport const getGenreMovies = async () => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`\n      );\n      return data.results;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\n\n\nexport const getSearchMovies = async (query) => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n      return data.results;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\nexport const getDetailsMovie = async (movieId) => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n         console.log(data)\n      return data.results;\n   } catch (error) {\n      console.error(error.message);\n   }\n};","import { useParams, NavLink, useLocation } from 'react-router-dom';\nimport { getTrendingMovies } from '../components/Api/api';\n// getSearchMovies,getDetailsMovie getGenreMovies\n\nimport { useEffect, useState } from 'react';\n\nconst MovieCard = () => {\n   const [cards, setCards] = useState('');\n   // const [ genres , setGenres] = useState('');\n   // const [detail, setDetail] = useState('')\n   const { currentId } = useParams();\n   const location = useLocation()\n   console.log(location)\n\n   const currentCard = cards && cards.find(card => card.id === currentId);\n   const date = `${currentCard.release_date}`;\n\n\n   useEffect(() => {\n      async function getData() {\n         // не працює, вибиває помилку\n         // setGenres(await getGenreMovies());\n         // не працює, вибиває помилку\n         // setDetail(await getDetailsMovie(currentId))\n         // if (!location.state) {\n            return setCards(await getTrendingMovies(currentId));\n         // }\n            // setCards(await getSearchMovies(location.state.name));\n      }\n      getData();\n   }, [currentId]);\n\n   console.log(currentCard);\n   // console.log(currentId);\n   // console.log(detail);\n\n\n// не працює, вибиває помилку\n   // function getGenreMarkup() {\n   //    const genresId = currentCard.genre_ids;\n   //    return genres &&\n   //       genres.map(genre => {\n   //          if (genresId.includes(genre.id)) {\n   //             return <li key={genre.id} >{genre.name}</li>\n   //          }\n   //       });\n   // }\n\n   return (\n      <main>\n         <NavLink to=\"/home\">Go back</NavLink>\n         <div>\n            <img src={`https://image.tmdb.org/t/p/w500/${currentCard.poster_path}`} alt=\"#\" width='300'/>\n            <ul>\n               <li>\n                  <h2>\n                     {currentCard.title} <span>({date.slice(0, 4)})</span>\n                  </h2>\n               </li>\n               <li>user score</li>\n               <li>\n                  <h3>Overvier</h3>\n                  <p>{currentCard.overview}</p>\n               </li>\n               <li>\n                  <h4>Gernes</h4>\n                  {/* <ul>{getGenreMarkup()}</ul> */}\n               </li>\n            </ul>\n         </div>\n         <div>\n            <p>additional information</p>\n            <ul>\n               <li>\n                  Cast <p>{currentCard.overview}</p>\n               </li>\n               <li>Reviews</li>\n            </ul>\n         </div>\n      </main>\n   );\n};\n\nexport default MovieCard;\n"],"names":["BASE_URL","API_KEY","TREND_URL","getTrendingMovies","axios","data","results","console","error","message","getSearchMovies","query","useState","cards","setCards","currentId","useParams","location","useLocation","log","currentCard","find","card","id","date","release_date","useEffect","getData","to","src","poster_path","alt","width","title","slice","overview"],"sourceRoot":""}
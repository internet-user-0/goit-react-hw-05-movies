{"version":3,"file":"static/js/681.7463b66f.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEVC,EAAS,UAAMF,EAAN,wBAEFG,EAAiB,mCAAG,+GAEJC,EAAAA,EAAAA,IAAA,UACjBF,EADiB,oBACID,EADJ,YAFI,uBAEnBI,EAFmB,EAEnBA,KAFmB,kBAKpBA,EAAKC,SALe,gCAO3BC,QAAQC,MAAM,KAAMC,SAPO,yDAAH,qDAwBjBC,EAAe,mCAAG,WAAOC,GAAP,kGAEJP,EAAAA,EAAAA,IAAA,UACfJ,EADe,iCACkBC,EADlB,iCACkDU,EADlD,gCAFI,uBAElBN,EAFkB,EAElBA,KAFkB,kBAIlBA,EAAKC,SAJa,gCAMzBC,QAAQC,MAAM,KAAMC,SANK,yDAAH,sDAUfG,EAAe,mCAAG,WAAOC,GAAP,kGAEJT,EAAAA,EAAAA,IAAA,UACfJ,EADe,kBACGa,EADH,oBACsBZ,EADtB,oBAFI,uBAElBI,EAFkB,EAElBA,KAFkB,kBAIlBA,GAJkB,gCAMzBE,QAAQC,MAAM,KAAMC,SANK,yDAAH,sDAWfK,EAAc,mCAAG,WAAOD,GAAP,kGAEHT,EAAAA,EAAAA,IAAA,UACfJ,EADe,kBACGa,EADH,4BAC8BZ,EAD9B,oBAFG,uBAEjBI,EAFiB,EAEjBA,KAFiB,kBAIjBA,EAAKU,MAJY,gCAMxBR,QAAQC,MAAM,KAAMC,SANI,yDAAH,sDAWdO,EAAe,mCAAG,WAAOH,GAAP,kGAEJT,EAAAA,EAAAA,IAAA,UACfJ,EADe,kBACGa,EADH,4BAC8BZ,EAD9B,2BAFI,uBAElBI,EAFkB,EAElBA,KAFkB,kBAIfA,EAAKC,SAJU,gCAMzBC,QAAQC,MAAM,KAAMC,SANK,yDAAH,qD,yGChC5B,UA3BgB,WACb,OAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAcC,EAAAA,EAAAA,MAAdD,UASR,OARAE,EAAAA,EAAAA,YAAU,WAAM,wCACb,0FACUH,EADV,UAC2BH,EAAAA,EAAAA,IAAgBI,GAD3C,wGADa,uBAAC,WAAD,wBAIbG,EACF,GAAE,CAACH,IAEJb,QAAQiB,IAAIN,IAET,wBACIA,EAAQO,OAAS,EACfP,EAAQQ,KAAI,SAAAC,GACT,OACG,2BACG,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFLF,EAAOG,GAKrB,KACC,gEAGb,C","sources":["api/api.js","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '37314a167a558e9a6582597c5654a5d7';\n\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\n\nexport const getTrendingMovies = async () => {\n   try {\n      const { data } = await axios.get(\n         `${TREND_URL}?api_key=${API_KEY}&page=1`\n      );\n      return data.results;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\nexport const getGenreMovies = async () => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`\n      );\n      return data.genres;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\n\n\nexport const getSearchMovies = async (query) => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n      return data.results;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\nexport const getDetailsMovie = async (movieId) => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n      return data;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\n\nexport const getActorsMovie = async (movieId) => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n      return data.cast;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\n\nexport const getReviewsMovie = async (movieId) => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n         return data.results;\n   } catch (error) {\n      console.error(error.message);\n   }\n};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsMovie } from 'api/api';\n\nconst Reviews = () => {\n   const [reviews, setReviews] = useState([]);\n   const { currentId } = useParams();\n   useEffect(() => {\n      async function getData() {\n         return setReviews(await getReviewsMovie(currentId));\n      }\n      getData();\n   }, [currentId]);\n\n   console.log(reviews);\n   return (\n      <ul>\n         {reviews.length > 0 ? (\n            reviews.map(review => {\n               return (\n                  <li key={review.id}>\n                     <h3>{review.author}</h3>\n                     <p>{review.content}</p>\n                  </li>\n               );\n            })\n         ) : (<div>We don't have any for this movie.</div>)}\n      </ul>\n   );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","TREND_URL","getTrendingMovies","axios","data","results","console","error","message","getSearchMovies","query","getDetailsMovie","movieId","getActorsMovie","cast","getReviewsMovie","useState","reviews","setReviews","currentId","useParams","useEffect","getData","log","length","map","review","author","content","id"],"sourceRoot":""}
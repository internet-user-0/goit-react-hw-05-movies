{"version":3,"file":"static/js/134.7db7dbf3.chunk.js","mappings":"sUAEMA,EAAW,+BACXC,EAAU,mCAEVC,EAAS,UAAMF,EAAN,wBAEFG,EAAiB,mCAAG,+GAEJC,EAAAA,EAAAA,IAAA,UACjBF,EADiB,oBACID,EADJ,YAFI,uBAEnBI,EAFmB,EAEnBA,KAFmB,kBAKpBA,EAAKC,SALe,gCAO3BC,QAAQC,MAAM,KAAMC,SAPO,yDAAH,qDAWjBC,EAAc,mCAAG,+GAEHN,EAAAA,EAAAA,IAAA,UACfJ,EADe,qCACsBC,EADtB,oBAFG,uBAEjBI,EAFiB,EAEjBA,KAFiB,kBAKjBA,EAAKM,QALY,gCAOxBJ,QAAQC,MAAM,KAAMC,SAPI,yDAAH,qDAadG,EAAe,mCAAG,WAAOC,GAAP,kGAEJT,EAAAA,EAAAA,IAAA,UACfJ,EADe,iCACkBC,EADlB,iCACkDY,EADlD,gCAFI,uBAElBR,EAFkB,EAElBA,KAFkB,kBAIlBA,EAAKC,SAJa,gCAMzBC,QAAQC,MAAM,KAAMC,SANK,yDAAH,sDAUfK,EAAe,mCAAG,WAAOC,GAAP,kGAEJX,EAAAA,EAAAA,IAAA,UACfJ,EADe,kBACGe,EADH,oBACsBd,EADtB,oBAFI,uBAElBI,EAFkB,EAElBA,KAEJE,QAAQS,IAAIX,GAJU,kBAKlBA,GALkB,gCAOzBE,QAAQC,MAAM,KAAMC,SAPK,yDAAH,sDAYfQ,EAAc,mCAAG,WAAOF,GAAP,kGAEHX,EAAAA,EAAAA,IAAA,UACfJ,EADe,kBACGe,EADH,4BAC8Bd,EAD9B,oBAFG,uBAEjBI,EAFiB,EAEjBA,KAFiB,kBAIjBA,GAJiB,gCAMxBE,QAAQC,MAAM,KAAMC,SANI,yDAAH,sDAWdS,EAAe,mCAAG,WAAOH,GAAP,kGAEJX,EAAAA,EAAAA,IAAA,UACfJ,EADe,kBACGe,EADH,4BAC8Bd,EAD9B,2BAFI,uBAElBI,EAFkB,EAElBA,KAFkB,kBAIlBA,EAAKC,SAJa,gCAMzBC,QAAQC,MAAM,KAAMC,SANK,yDAAH,qD,gHChB5B,UA5CA,WAAmB,IAAD,EACf,GAAkCU,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMT,EAAO,UAAGQ,EAAaE,IAAI,kBAApB,QAAkC,GACzCC,GAAWC,EAAAA,EAAAA,MAsBjB,OApBApB,QAAQS,IAAII,IAEZQ,EAAAA,EAAAA,YAAU,WAAM,wCACb,0FACGP,EADH,UACsBT,EAAAA,EAAAA,IAAgBG,GADtC,8EADa,uBAAC,WAAD,wBAKbc,EACF,GAAE,CAACd,KAaD,6BACM,kBAAOe,KAAK,OAAOC,MAAOhB,EAASiB,SAZlB,SAAAC,GACvB,IAAMC,EAAYD,EAAIE,OAAOJ,MAG7B,OACUP,EADQ,KAAdU,EACsB,CAAC,EAEJ,CAAEnB,QAASmB,GACpC,IAKSd,IACE,wBACIA,EAAUgB,KAAI,SAAAC,GACZ,OACG,yBACG,SAAC,KAAD,CAAMC,MAAO,CAACC,KAAMb,EAAUc,KAAMzB,GAAU0B,GAAE,UAAKJ,EAAKK,IAA1D,SAAiEL,EAAKM,SADhEN,EAAKK,GAInB,QAKlB,C","sources":["components/Api/api.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '37314a167a558e9a6582597c5654a5d7';\n\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\n\nexport const getTrendingMovies = async () => {\n   try {\n      const { data } = await axios.get(\n         `${TREND_URL}?api_key=${API_KEY}&page=1`\n      );\n      return data.results;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\nexport const getGenreMovies = async () => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`\n      );\n      return data.genres;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\n\n\nexport const getSearchMovies = async (query) => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n      return data.results;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\nexport const getDetailsMovie = async (movieId) => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n         console.log(data)\n      return data;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\n\nexport const getActorsMovie = async (movieId) => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n      return data;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\n\nexport const getReviewsMovie = async (movieId) => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n      return data.results;\n   } catch (error) {\n      console.error(error.message);\n   }\n};","import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getSearchMovies } from 'components/Api/api';\n\nfunction Movies() {\n   const [movieCard, setMovieCard] = useState('');\n   const [searchParams, setSearchParams] = useSearchParams('');\n   const movieId = searchParams.get('movieId') ?? \"\";\n   const location = useLocation()\n\n   console.log(movieCard)\n\n   useEffect(() => {\n      async function getData() {\n         setMovieCard(await getSearchMovies(movieId));\n         \n      }\n      getData();\n   }, [movieId]);\n\n   const updateQueryString = evt => {\n      const nameValue = evt.target.value;\n      \n      \n      if (nameValue === '') {\n         return setSearchParams({});\n      }\n      return setSearchParams({ movieId: nameValue});\n   };\n\n   return (\n      <main>\n            <input type=\"text\" value={movieId} onChange={updateQueryString} />\n            {movieCard && (\n               <ul>\n                  {movieCard.map(card => {\n                     return (\n                        <li key={card.id}>\n                           <Link state={{from: location, name: movieId}} to={`${card.id}`}>{card.title}</Link>\n                        </li>\n                     );\n                  })}\n               </ul>\n            )}\n      </main>\n   );\n}\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","TREND_URL","getTrendingMovies","axios","data","results","console","error","message","getGenreMovies","genres","getSearchMovies","query","getDetailsMovie","movieId","log","getActorsMovie","getReviewsMovie","useState","movieCard","setMovieCard","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","getData","type","value","onChange","evt","nameValue","target","map","card","state","from","name","to","id","title"],"sourceRoot":""}
{"version":3,"file":"static/js/134.758324c5.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEVC,EAAS,UAAMF,EAAN,wBAEFG,EAAiB,mCAAG,+GAEJC,EAAAA,EAAAA,IAAA,UACjBF,EADiB,oBACID,EADJ,YAFI,uBAEnBI,EAFmB,EAEnBA,KAFmB,kBAKpBA,EAAKC,SALe,gCAO3BC,QAAQC,MAAM,KAAMC,SAPO,yDAAH,qDAwBjBC,EAAe,mCAAG,WAAOC,GAAP,kGAEJP,EAAAA,EAAAA,IAAA,UACfJ,EADe,iCACkBC,EADlB,iCACkDU,EADlD,gCAFI,uBAElBN,EAFkB,EAElBA,KAFkB,kBAIlBA,EAAKC,SAJa,gCAMzBC,QAAQC,MAAM,KAAMC,SANK,yDAAH,sDAUfG,EAAe,mCAAG,WAAOC,GAAP,kGAEJT,EAAAA,EAAAA,IAAA,UACfJ,EADe,kBACGa,EADH,oBACsBZ,EADtB,oBAFI,uBAElBI,EAFkB,EAElBA,KAFkB,kBAIlBA,GAJkB,gCAMzBE,QAAQC,MAAM,KAAMC,SANK,yDAAH,sDAWfK,EAAc,mCAAG,WAAOD,GAAP,kGAEHT,EAAAA,EAAAA,IAAA,UACfJ,EADe,kBACGa,EADH,4BAC8BZ,EAD9B,oBAFG,uBAEjBI,EAFiB,EAEjBA,KAFiB,kBAIjBA,EAAKU,MAJY,gCAMxBR,QAAQC,MAAM,KAAMC,SANI,yDAAH,sDAWdO,EAAe,mCAAG,WAAOH,GAAP,kGAEJT,EAAAA,EAAAA,IAAA,UACfJ,EADe,kBACGa,EADH,4BAC8BZ,EAD9B,2BAFI,uBAElBI,EAFkB,EAElBA,KAFkB,kBAIfA,EAAKC,SAJU,gCAMzBC,QAAQC,MAAM,KAAMC,SANK,yDAAH,qD,iHCZ5B,UA/CA,WAAmB,IAAD,EACf,GAAkCQ,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMT,EAAO,UAAGQ,EAAaE,IAAI,kBAApB,QAAkC,GACzCC,GAAWC,EAAAA,EAAAA,MAoBjB,OAlBAlB,QAAQmB,IAAIR,IAEZS,EAAAA,EAAAA,YAAU,WAAM,wCACb,0FACGR,EADH,UACsBT,EAAAA,EAAAA,IAAgBG,GADtC,8EADa,uBAAC,WAAD,wBAIbe,EACF,GAAE,CAACf,KAYD,6BACG,kBAAOgB,KAAK,OAAOC,MAAOjB,EAASkB,SAXf,SAAAC,GACvB,IAAMC,EAAYD,EAAIE,OAAOJ,MAE7B,OACUR,EADQ,KAAdW,EACsB,CAAC,EAEJ,CAAEpB,QAASoB,GACpC,IAKMf,IACE,wBACIA,EAAUiB,KAAI,SAAAC,GACZ,OACG,yBACG,SAAC,KAAD,CACGC,MAAO,CAAEC,KAAMd,GACfe,GAAE,UAAKH,EAAKI,IAFf,SAIIJ,EAAKK,SALHL,EAAKI,GASnB,QAKf,C","sources":["api/api.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '37314a167a558e9a6582597c5654a5d7';\n\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\n\nexport const getTrendingMovies = async () => {\n   try {\n      const { data } = await axios.get(\n         `${TREND_URL}?api_key=${API_KEY}&page=1`\n      );\n      return data.results;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\nexport const getGenreMovies = async () => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`\n      );\n      return data.genres;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\n\n\nexport const getSearchMovies = async (query) => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n      return data.results;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\nexport const getDetailsMovie = async (movieId) => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n      return data;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\n\nexport const getActorsMovie = async (movieId) => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n      return data.cast;\n   } catch (error) {\n      console.error(error.message);\n   }\n};\n\n\nexport const getReviewsMovie = async (movieId) => {\n   try {\n      const {data} = await axios.get(\n         `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n         return data.results;\n   } catch (error) {\n      console.error(error.message);\n   }\n};","import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getSearchMovies } from 'api/api';\n\nfunction Movies() {\n   const [movieCard, setMovieCard] = useState('');\n   const [searchParams, setSearchParams] = useSearchParams('');\n   const movieId = searchParams.get('movieId') ?? '';\n   const location = useLocation();\n\n   console.log(movieCard);\n\n   useEffect(() => {\n      async function getData() {\n         setMovieCard(await getSearchMovies(movieId));\n      }\n      getData();\n   }, [movieId]);\n\n   const updateQueryString = evt => {\n      const nameValue = evt.target.value;\n\n      if (nameValue === '') {\n         return setSearchParams({});\n      }\n      return setSearchParams({ movieId: nameValue });\n   };\n\n   return (\n      <main>\n         <input type=\"text\" value={movieId} onChange={updateQueryString} />\n         {movieCard && (\n            <ul>\n               {movieCard.map(card => {\n                  return (\n                     <li key={card.id}>\n                        <Link\n                           state={{ from: location}}\n                           to={`${card.id}`}\n                        >\n                           {card.title}\n                        </Link>\n                     </li>\n                  );\n               })}\n            </ul>\n         )}\n      </main>\n   );\n}\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","TREND_URL","getTrendingMovies","axios","data","results","console","error","message","getSearchMovies","query","getDetailsMovie","movieId","getActorsMovie","cast","getReviewsMovie","useState","movieCard","setMovieCard","useSearchParams","searchParams","setSearchParams","get","location","useLocation","log","useEffect","getData","type","value","onChange","evt","nameValue","target","map","card","state","from","to","id","title"],"sourceRoot":""}